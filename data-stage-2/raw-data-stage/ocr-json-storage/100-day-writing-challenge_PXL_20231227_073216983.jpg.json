{
    "text": "27.12.2023\n\nEs ist der Tag nach Weihnachten. Die Festtage sind vorbei.\nEs gibt nun wieder Raum für Neues. Die Traditionen wurden\ngepflegt, wenn auch in leichter Abwandlung mit kleinen\nOptimierungen.\nSo gab es keine Wickelklöße, aber stattdessen viel Zeit am 2. Feiertag.\n\nOh ja, die Zeit habe ich auch gebraucht. \nEs war sehr anstrengend am 1. Feiertag. Kaum Zeit für ruhigen Gedankenaustausch.\n\nNaja, anders war es in der gegebenen Konstellation auch\nnicht zu erwarten. Wir können leichte Tendenzen zur\nVerbesserung beobachten, aber hin zu einem leichten Leben ist es noch\nein langer Weg.\n\nIch began den Tag 10 vor 5 und steckte meinen\nKopf in das Apache wayang Projekt. \n\nDie Struktur der Teilprojekte möchte ich\nverstehen. Außerdem muß der Scope geklärt werden. \n\nAuf welcher Ebene soll Apache Kafka in Wayang integriert werden? Ich\nschlage vor, daß wir mit einfachem Source- und Sink-connector starten.\nDabei wird ein kostenfreies Confluent Cloud cluster zum Einsatz kommen.\n\nÜberlegen wir uns einen Anwendungsfall zum Testen.\n\nEin Sensordatenstrom besteht aus Meßdaten, deren\nMax, Min, und Mittelwerte aggregiert werden sollen.\njedoch nur Max-Werte auf globaler Ebene zusammengefasst werden sollen\nund die MW and MIN Werte jeweils lokalen bereitgestellt werden sollen.\n\nSolch eine Applikation ist dann auch eine \"long running streaming app\".",
    "filename": "PXL_20231227_073216983.jpg",
    "authorName": "Mirko Kämpf",
    "writtenDate": "2023-12-27",
    "refinedDate": "2023-12-27",
    "personalContext": "100 Tage Challenge",
    "context": "100-day-writing-challenge",
    "location": "Lat: 51.3126374, Long: 11.9270056",
    "gcsUrl": "https://storage.googleapis.com/mk-ocr-bucket/./uploads/PXL_20231227_073216983.jpg",
    "refined": "done"
}